buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}


def ENV = System.getenv()

def buildNum

if(ENV.DRONE_BUILD_NUMBER)
    buildNum = ENV.DRONE_BUILD_NUMBER + " - drone"

// Jenkins Support
else if (ENV.BUILD_NUMBER)
    buildNum = ENV.BUILD_NUMBER + " - jenkins"

// Travis Support
else if (ENV.TRAVIS_BUILD_NUMBER)
    buildNum = ENV.TRAVIS_BUILD_NUMBER + " - travis"

// Codeship.io Support
else if (ENV.CI_BUILD_NUMBER)
    buildNum = ENV.CI_BUILD_NUMBER + " - codeship"

else
    buildNum = "err - manual"


// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

apply plugin: 'forge'
apply plugin: 'java'
apply plugin: 'scala'
apply plugin 'maven'

version = config.mod_version + buildNum
group= "com.tgame" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "tgamecore"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    assetDir = "eclipse/assets"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

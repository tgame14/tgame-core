buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}


apply plugin: 'forge'
apply plugin: 'curseforge'
apply plugin: 'maven-publish'

version = config.mod_version
group = "com.tgame.mods" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "tgame-core"

if (System.getenv().BUILD_NUMBER != null)
    version += ".${System.getenv().BUILD_NUMBER}"
else
    version += " - err"

minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    assetDir = "eclipse/assets"
    replace "@AUTHOR@", config.author_name
    replace "@VERSION@", project.version
}

curse {
    printf "publishing to curse"
    apiKey = project.CURSE_API_KEY
    projectId = "220454"
    releaseType = project.RELEASE_CHANNEL
}

task copyProperties(type: Copy) {
    from 'build.properties'
    into 'output'
}

jar {
    dependsOn copyProperties
    classifier = 'universal'

    destinationDir = file 'output'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'

    destinationDir = file 'output'
}


publishing {
    publications {
        publish.dependsOn 'build'
        publiah.dependsOn 'curse'

        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.archivesBaseName
            version project.version

            artifact jar
            artifact deobfJar

            artifact {
                classifier = "output/properties"
                file 'output/build.properties'
            }
        }
    }
    repositories {
        maven {
            url "file://var/www/maven"
        }
    }
}

//processResources
//{
//    // this will ensure that this task is redone when the versions change.
//    inputs.property "version", project.version
//    inputs.property "mcversion", project.minecraft.version
//
//    // replace stuff in mcmod.info, nothing else
//    from(sourceSets.main.resources.srcDirs) {
//        include 'mcmod.info'
//
//        // replace version and mcversion
//        expand 'version':project.version, 'mcversion':project.minecraft.version
//    }
//
//    // copy everything else, thats not the mcmod.info
//    from(sourceSets.main.resources.srcDirs) {
//        exclude 'mcmod.info'
//    }
//}
